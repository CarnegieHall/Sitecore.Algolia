<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="sitecore" type="Sitecore.Configuration.ConfigReader, Sitecore.Kernel" />
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, Sitecore.Logging" />
  </configSections>
  <sitecore database="Fake">
    <!-- SETTINGS -->
    <settings>
      <setting name="LicenseFile" value=".\license.xml" />
      <setting name="Caching.Enabled" value="false" />
    </settings>
    <!-- PIPELINES -->
    <pipelines>
      <!-- FakeDb -->
      <initFakeDb>
        <processor type="Sitecore.FakeDb.Pipelines.InitFakeDb.InitDataProviders, Sitecore.FakeDb" />
        <processor type="Sitecore.FakeDb.Pipelines.InitFakeDb.InitDataEngineCommands, Sitecore.FakeDb" />
        <processor type="Sitecore.FakeDb.Pipelines.InitFakeDb.InitAuthorizationProvider, Sitecore.FakeDb" />
        <processor type="Sitecore.FakeDb.Pipelines.InitFakeDb.InitStandardValuesProvider, Sitecore.FakeDb" />
      </initFakeDb>
      <releaseFakeDb />
      <!-- Analytics -->
      <loadVisitor />
      <!--Sitecore.ContentSearch-->
      <indexing.filterIndex.inbound />
      <indexing.filterIndex.outbound />
    </pipelines>
    <dataProviders>
      <main type="Sitecore.FakeDb.Data.DataProviders.$(database)DataProvider, Sitecore.FakeDb" />
    </dataProviders>
    <!-- DATABASES -->
    <databases>
      <!-- core -->
      <database id="core" type="Sitecore.Data.Database, Sitecore.Kernel" singleInstance="true">
        <param desc="name">$(id)</param>
        <dataProviders hint="list:AddDataProvider">
          <dataProvider ref="dataProviders/main" />
        </dataProviders>
        <Engines.DataEngine.Commands.AddFromtemplatePrototype type="Sitecore.FakeDb.Data.Engines.DataCommands.AddFromTemplateCommand, Sitecore.FakeDb" />
        <Engines.DataEngine.Commands.AddVersionPrototype type="Sitecore.FakeDb.Data.Engines.DataCommands.AddVersionCommand, Sitecore.FakeDb" />
        <Engines.DataEngine.Commands.BlobStreamExistsPrototype type="Sitecore.FakeDb.Data.Engines.DataCommands.BlobStreamExistsCommand, Sitecore.FakeDb" />
        <Engines.DataEngine.Commands.CopyItemPrototype type="Sitecore.FakeDb.Data.Engines.DataCommands.CopyItemCommand, Sitecore.FakeDb" />
        <Engines.DataEngine.Commands.CreateItemPrototype type="Sitecore.FakeDb.Data.Engines.DataCommands.CreateItemCommand, Sitecore.FakeDb" />
        <Engines.DataEngine.Commands.DeletePrototype type="Sitecore.FakeDb.Data.Engines.DataCommands.DeleteItemCommand, Sitecore.FakeDb" />
        <Engines.DataEngine.Commands.GetBlobStreamPrototype type="Sitecore.FakeDb.Data.Engines.DataCommands.GetBlobStreamCommand, Sitecore.FakeDb" />
        <Engines.DataEngine.Commands.GetChildrenPrototype type="Sitecore.FakeDb.Data.Engines.DataCommands.GetChildrenCommand, Sitecore.FakeDb" />
        <Engines.DataEngine.Commands.GetItemPrototype type="Sitecore.FakeDb.Data.Engines.DataCommands.GetItemCommand, Sitecore.FakeDb" />
        <Engines.DataEngine.Commands.GetParentPrototype type="Sitecore.FakeDb.Data.Engines.DataCommands.GetParentCommand, Sitecore.FakeDb" />
        <Engines.DataEngine.Commands.GetRootItemPrototype type="Sitecore.FakeDb.Data.Engines.DataCommands.GetRootItemCommand, Sitecore.FakeDb" />
        <Engines.DataEngine.Commands.GetVersionsPrototype type="Sitecore.FakeDb.Data.Engines.DataCommands.GetVersionsCommand, Sitecore.FakeDb" />
        <Engines.DataEngine.Commands.HasChildrenPrototype type="Sitecore.FakeDb.Data.Engines.DataCommands.HasChildrenCommand, Sitecore.FakeDb" />
        <Engines.DataEngine.Commands.MoveItemPrototype type="Sitecore.FakeDb.Data.Engines.DataCommands.MoveItemCommand, Sitecore.FakeDb" />
        <Engines.DataEngine.Commands.RemoveDataPrototype type="Sitecore.FakeDb.Data.Engines.DataCommands.RemoveDataCommand, Sitecore.FakeDb" />
        <Engines.DataEngine.Commands.RemoveVersionPrototype type="Sitecore.FakeDb.Data.Engines.DataCommands.RemoveVersionCommand, Sitecore.FakeDb" />
        <Engines.DataEngine.Commands.ResolvePathPrototype type="Sitecore.FakeDb.Data.Engines.DataCommands.ResolvePathCommand, Sitecore.FakeDb" />
        <Engines.DataEngine.Commands.SaveItemPrototype type="Sitecore.FakeDb.Data.Engines.DataCommands.SaveItemCommand, Sitecore.FakeDb" />
        <Engines.DataEngine.Commands.SetBlobStreamPrototype type="Sitecore.FakeDb.Data.Engines.DataCommands.SetBlobStreamCommand, Sitecore.FakeDb" />
      </database>
      <!-- master -->
      <database id="master" type="Sitecore.Data.Database, Sitecore.Kernel" singleInstance="true">
        <param desc="name">$(id)</param>
        <dataProviders hint="list:AddDataProvider">
          <dataProvider ref="dataProviders/main" />
        </dataProviders>
        <Engines.DataEngine.Commands.AddFromtemplatePrototype type="Sitecore.FakeDb.Data.Engines.DataCommands.AddFromTemplateCommand, Sitecore.FakeDb" />
        <Engines.DataEngine.Commands.AddVersionPrototype type="Sitecore.FakeDb.Data.Engines.DataCommands.AddVersionCommand, Sitecore.FakeDb" />
        <Engines.DataEngine.Commands.BlobStreamExistsPrototype type="Sitecore.FakeDb.Data.Engines.DataCommands.BlobStreamExistsCommand, Sitecore.FakeDb" />
        <Engines.DataEngine.Commands.CopyItemPrototype type="Sitecore.FakeDb.Data.Engines.DataCommands.CopyItemCommand, Sitecore.FakeDb" />
        <Engines.DataEngine.Commands.CreateItemPrototype type="Sitecore.FakeDb.Data.Engines.DataCommands.CreateItemCommand, Sitecore.FakeDb" />
        <Engines.DataEngine.Commands.DeletePrototype type="Sitecore.FakeDb.Data.Engines.DataCommands.DeleteItemCommand, Sitecore.FakeDb" />
        <Engines.DataEngine.Commands.GetBlobStreamPrototype type="Sitecore.FakeDb.Data.Engines.DataCommands.GetBlobStreamCommand, Sitecore.FakeDb" />
        <Engines.DataEngine.Commands.GetChildrenPrototype type="Sitecore.FakeDb.Data.Engines.DataCommands.GetChildrenCommand, Sitecore.FakeDb" />
        <Engines.DataEngine.Commands.GetItemPrototype type="Sitecore.FakeDb.Data.Engines.DataCommands.GetItemCommand, Sitecore.FakeDb" />
        <Engines.DataEngine.Commands.GetParentPrototype type="Sitecore.FakeDb.Data.Engines.DataCommands.GetParentCommand, Sitecore.FakeDb" />
        <Engines.DataEngine.Commands.GetRootItemPrototype type="Sitecore.FakeDb.Data.Engines.DataCommands.GetRootItemCommand, Sitecore.FakeDb" />
        <Engines.DataEngine.Commands.GetVersionsPrototype type="Sitecore.FakeDb.Data.Engines.DataCommands.GetVersionsCommand, Sitecore.FakeDb" />
        <Engines.DataEngine.Commands.HasChildrenPrototype type="Sitecore.FakeDb.Data.Engines.DataCommands.HasChildrenCommand, Sitecore.FakeDb" />
        <Engines.DataEngine.Commands.MoveItemPrototype type="Sitecore.FakeDb.Data.Engines.DataCommands.MoveItemCommand, Sitecore.FakeDb" />
        <Engines.DataEngine.Commands.RemoveDataPrototype type="Sitecore.FakeDb.Data.Engines.DataCommands.RemoveDataCommand, Sitecore.FakeDb" />
        <Engines.DataEngine.Commands.RemoveVersionPrototype type="Sitecore.FakeDb.Data.Engines.DataCommands.RemoveVersionCommand, Sitecore.FakeDb" />
        <Engines.DataEngine.Commands.ResolvePathPrototype type="Sitecore.FakeDb.Data.Engines.DataCommands.ResolvePathCommand, Sitecore.FakeDb" />
        <Engines.DataEngine.Commands.SaveItemPrototype type="Sitecore.FakeDb.Data.Engines.DataCommands.SaveItemCommand, Sitecore.FakeDb" />
        <Engines.DataEngine.Commands.SetBlobStreamPrototype type="Sitecore.FakeDb.Data.Engines.DataCommands.SetBlobStreamCommand, Sitecore.FakeDb" />
      </database>
      <!-- web -->
      <database id="web" type="Sitecore.Data.Database, Sitecore.Kernel" singleInstance="true">
        <param desc="name">$(id)</param>
        <dataProviders hint="list:AddDataProvider">
          <dataProvider ref="dataProviders/main" />
        </dataProviders>
        <Engines.DataEngine.Commands.AddFromtemplatePrototype type="Sitecore.FakeDb.Data.Engines.DataCommands.AddFromTemplateCommand, Sitecore.FakeDb" />
        <Engines.DataEngine.Commands.AddVersionPrototype type="Sitecore.FakeDb.Data.Engines.DataCommands.AddVersionCommand, Sitecore.FakeDb" />
        <Engines.DataEngine.Commands.BlobStreamExistsPrototype type="Sitecore.FakeDb.Data.Engines.DataCommands.BlobStreamExistsCommand, Sitecore.FakeDb" />
        <Engines.DataEngine.Commands.CopyItemPrototype type="Sitecore.FakeDb.Data.Engines.DataCommands.CopyItemCommand, Sitecore.FakeDb" />
        <Engines.DataEngine.Commands.CreateItemPrototype type="Sitecore.FakeDb.Data.Engines.DataCommands.CreateItemCommand, Sitecore.FakeDb" />
        <Engines.DataEngine.Commands.DeletePrototype type="Sitecore.FakeDb.Data.Engines.DataCommands.DeleteItemCommand, Sitecore.FakeDb" />
        <Engines.DataEngine.Commands.GetBlobStreamPrototype type="Sitecore.FakeDb.Data.Engines.DataCommands.GetBlobStreamCommand, Sitecore.FakeDb" />
        <Engines.DataEngine.Commands.GetChildrenPrototype type="Sitecore.FakeDb.Data.Engines.DataCommands.GetChildrenCommand, Sitecore.FakeDb" />
        <Engines.DataEngine.Commands.GetItemPrototype type="Sitecore.FakeDb.Data.Engines.DataCommands.GetItemCommand, Sitecore.FakeDb" />
        <Engines.DataEngine.Commands.GetParentPrototype type="Sitecore.FakeDb.Data.Engines.DataCommands.GetParentCommand, Sitecore.FakeDb" />
        <Engines.DataEngine.Commands.GetRootItemPrototype type="Sitecore.FakeDb.Data.Engines.DataCommands.GetRootItemCommand, Sitecore.FakeDb" />
        <Engines.DataEngine.Commands.GetVersionsPrototype type="Sitecore.FakeDb.Data.Engines.DataCommands.GetVersionsCommand, Sitecore.FakeDb" />
        <Engines.DataEngine.Commands.HasChildrenPrototype type="Sitecore.FakeDb.Data.Engines.DataCommands.HasChildrenCommand, Sitecore.FakeDb" />
        <Engines.DataEngine.Commands.MoveItemPrototype type="Sitecore.FakeDb.Data.Engines.DataCommands.MoveItemCommand, Sitecore.FakeDb" />
        <Engines.DataEngine.Commands.RemoveDataPrototype type="Sitecore.FakeDb.Data.Engines.DataCommands.RemoveDataCommand, Sitecore.FakeDb" />
        <Engines.DataEngine.Commands.RemoveVersionPrototype type="Sitecore.FakeDb.Data.Engines.DataCommands.RemoveVersionCommand, Sitecore.FakeDb" />
        <Engines.DataEngine.Commands.ResolvePathPrototype type="Sitecore.FakeDb.Data.Engines.DataCommands.ResolvePathCommand, Sitecore.FakeDb" />
        <Engines.DataEngine.Commands.SaveItemPrototype type="Sitecore.FakeDb.Data.Engines.DataCommands.SaveItemCommand, Sitecore.FakeDb" />
        <Engines.DataEngine.Commands.SetBlobStreamPrototype type="Sitecore.FakeDb.Data.Engines.DataCommands.SetBlobStreamCommand, Sitecore.FakeDb" />
      </database>
    </databases>
    <fieldTypes>
      <!--  Defines the releation between a field type name, e.g. "lookup", and an implementation class -->
      <!--  Simple Types  -->
      <fieldType name="Checkbox" type="Sitecore.Data.Fields.CheckboxField,Sitecore.Kernel" />
      <fieldType name="Date" type="Sitecore.Data.Fields.DateField,Sitecore.Kernel" />
      <fieldType name="Datetime" type="Sitecore.Data.Fields.DateField,Sitecore.Kernel" />
      <fieldType name="File" type="Sitecore.Data.Fields.FileField,Sitecore.Kernel" />
      <fieldType name="Image" type="Sitecore.Data.Fields.ImageField,Sitecore.Kernel" />
      <fieldType name="Rich Text" type="Sitecore.Data.Fields.HtmlField,Sitecore.Kernel" resizable="true" />
      <fieldType name="Single-Line Text" type="Sitecore.Data.Fields.TextField,Sitecore.Kernel" />
      <fieldType name="Word Document" type="Sitecore.Data.Fields.WordDocumentField,Sitecore.Kernel" blob="true" />
      <fieldType name="Multi-Line Text" type="Sitecore.Data.Fields.TextField,Sitecore.Kernel" resizable="true" />
      <!--  List Types  -->
      <fieldType name="Checklist" type="Sitecore.Data.Fields.MultilistField,Sitecore.Kernel" resizable="true" />
      <fieldType name="Droplist" type="Sitecore.Data.Fields.ValueLookupField,Sitecore.Kernel" />
      <fieldType name="Grouped Droplink" type="Sitecore.Data.Fields.GroupedDroplinkField,Sitecore.Kernel" />
      <fieldType name="Grouped Droplist" type="Sitecore.Data.Fields.GroupedDroplistField,Sitecore.Kernel" />
      <fieldType name="Multilist" type="Sitecore.Data.Fields.MultilistField,Sitecore.Kernel" resizable="true" />
      <fieldType name="Multilist with Search" type="Sitecore.Data.Fields.MultilistField,Sitecore.Kernel" resizable="true" />
      <fieldType name="Name Value List" type="Sitecore.Data.Fields.NameValueListField,Sitecore.Kernel" />
      <fieldType name="Treelist" type="Sitecore.Data.Fields.MultilistField,Sitecore.Kernel" />
      <fieldType name="Treelist with Search" type="Sitecore.Data.Fields.MultilistField,Sitecore.Kernel" />
      <fieldType name="TreelistEx" type="Sitecore.Data.Fields.MultilistField,Sitecore.Kernel" />
      <!--  Link Types  -->
      <fieldType name="Droplink" type="Sitecore.Data.Fields.LookupField,Sitecore.Kernel" />
      <fieldType name="Droptree" type="Sitecore.Data.Fields.ReferenceField,Sitecore.Kernel" />
      <fieldType name="General Link" type="Sitecore.Data.Fields.LinkField,Sitecore.Kernel" />
      <fieldType name="General Link with Search" type="Sitecore.Data.Fields.LinkField,Sitecore.Kernel" />
      <fieldType name="Version Link" type="Sitecore.Data.Fields.VersionLinkField,Sitecore.Kernel" />
      <!--  Developer Types  -->
      <fieldType name="Frame" type="Sitecore.Data.Fields.TextField,Sitecore.Kernel" resizable="true" />
      <!-- ToDo: Sitecore 7.1 introduced a new field type class for Rules: Sitecore.Data.Fields.RulesField -->
      <fieldType name="Rules" type="Sitecore.Data.Fields.TextField,Sitecore.Kernel" resizable="true" />
      <fieldType name="Tracking" type="Sitecore.Analytics.Data.TrackingField,Sitecore.Analytics" resizable="true" />
      <!--  System Types  -->
      <fieldType name="Datasource" type="Sitecore.Data.Fields.DatasourceField,Sitecore.Kernel" />
      <fieldType name="Custom" type="Sitecore.Data.Fields.CustomCustomField,Sitecore.Kernel" />
      <fieldType name="Internal Link" type="Sitecore.Data.Fields.InternalLinkField,Sitecore.Kernel" />
      <fieldType name="Layout" type="Sitecore.Data.Fields.LayoutField,Sitecore.Kernel" />
      <fieldType name="Template Field Source" type="Sitecore.Data.Fields.TemplateFieldSourceField,Sitecore.Kernel" />
      <fieldType name="File Drop Area" type="Sitecore.Data.Fields.FileDropAreaField,Sitecore.Kernel" />
      <fieldType name="Page Preview" type="Sitecore.Data.Fields.PagePreviewField,Sitecore.Kernel" />
      <fieldType name="Rendering Datasource" type="Sitecore.Data.Fields.RenderingDatasourceField,Sitecore.Kernel" />
      <fieldType name="Thumbnail" type="Sitecore.Data.Fields.ThumbnailField,Sitecore.Kernel" />
      <fieldType name="Security" type="Sitecore.Data.Fields.TextField,Sitecore.Kernel" resizable="true" />
    </fieldTypes>
    <clientDataStore type="Sitecore.FakeDb.Configuration.ClientDataStoreStub, Sitecore.FakeDb" />
    <!-- ITEM MANAGER -->
    <itemManager defaultProvider="default">
      <providers>
        <clear />
        <add name="default" type="Sitecore.Data.Managers.ItemProvider, Sitecore.Kernel" />
      </providers>
    </itemManager>
    <!-- DOMAINS -->
    <domainManager>
      <providers>
        <clear />
        <add name="fake" type="Sitecore.FakeDb.SecurityModel.FakeDomainProvider, Sitecore.FakeDb" />
      </providers>
    </domainManager>
    <!-- SITES -->
    <siteManager defaultProvider="config">
      <providers>
        <clear />
        <add name="config" type="Sitecore.Sites.ConfigSiteProvider, Sitecore.Kernel" siteList="sites" checkSecurity="false" />
      </providers>
    </siteManager>
    <!-- STANDARD VALUES -->
    <standardValues defaultProvider="fake">
      <providers>
        <clear />
        <add name="fake" type="Sitecore.FakeDb.Data.FakeStandardValuesProvider, Sitecore.FakeDb" />
      </providers>
    </standardValues>
    <!-- AUTHENTICATION -->
    <authentication>
      <providers>
        <clear />
        <add name="switcher" type="Sitecore.Security.Authentication.SwitchingAuthenticationProvider, Sitecore.Kernel" />
      </providers>
    </authentication>
    <!-- AUTHORIZATION -->
    <authorization>
      <providers>
        <clear />
        <add name="fake" type="Sitecore.FakeDb.Security.AccessControl.FakeAuthorizationProvider, Sitecore.FakeDb" />
      </providers>
    </authorization>
    <!-- ACCESS RIGHTS -->
    <accessRights>
      <providers>
        <clear />
        <add name="fake" type="Sitecore.FakeDb.Security.AccessControl.FakeAccessRightProvider, Sitecore.FakeDb" />
      </providers>
    </accessRights>
    <!-- SEARCH -->
    <contentSearch>
      <configuration type="Sitecore.ContentSearch.ProviderIndexSearchConfiguration, Sitecore.ContentSearch" />
    </contentSearch>
    <switchingProviders>
      <membership>
        <provider providerName="fake" storeFullNames="true" wildcard="%" domains="*" />
      </membership>
      <roleManager>
        <provider providerName="fake" storeFullNames="true" wildcard="%" domains="*" />
      </roleManager>
      <profile>
        <provider providerName="fake" storeFullNames="true" wildcard="%" domains="*" />
      </profile>
    </switchingProviders>
    <linkManager defaultProvider="sitecore">
      <providers>
        <clear />
        <add name="sitecore" type="Sitecore.Links.LinkProvider, Sitecore.Kernel" lowercaseUrls="false" addAspxExtension="false" languageEmbedding="never" alwaysIncludeServerUrl="false" encodeNames="true" languageLocation="filePath" shortenUrls="true" useDisplayName="false" />
      </providers>
    </linkManager>
  </sitecore>
  <log4net />
  <system.web>
    <membership defaultProvider="sitecore" hashAlgorithmType="SHA1">
      <providers>
        <clear />
        <add name="sitecore" type="Sitecore.Security.SitecoreMembershipProvider, Sitecore.Kernel" realProviderName="fake" providerWildcard="%" raiseEvents="true" />
        <add name="fake" type="Sitecore.FakeDb.Security.Web.FakeMembershipProvider, Sitecore.FakeDb" />
        <add name="switcher" type="Sitecore.Security.SwitchingMembershipProvider, Sitecore.Kernel" applicationName="sitecore" mappings="switchingProviders/membership" />
      </providers>
    </membership>
    <roleManager defaultProvider="sitecore" enabled="true">
      <providers>
        <clear />
        <add name="sitecore" type="Sitecore.Security.SitecoreRoleProvider, Sitecore.Kernel" realProviderName="fake" raiseEvents="true" />
        <add name="fake" type="Sitecore.FakeDb.Security.Web.FakeRoleProvider, Sitecore.FakeDb" />
        <add name="switcher" type="Sitecore.Security.SwitchingRoleProvider, Sitecore.Kernel" applicationName="sitecore" mappings="switchingProviders/roleManager" />
      </providers>
    </roleManager>
    <profile defaultProvider="fake" enabled="true" inherits="Sitecore.FakeDb.Profile.FakeUserProfile, Sitecore.FakeDb">
      <providers>
        <clear />
        <add name="fake" type="Sitecore.FakeDb.Security.Web.FakeProfileProvider, Sitecore.FakeDb" />
        <add name="switcher" type="Sitecore.Security.SwitchingProfileProvider, Sitecore.Kernel" applicationName="sitecore" mappings="switchingProviders/profile" />
      </providers>
      <properties>
        <clear />
        <add type="System.String" name="SC_UserData" />
      </properties>
    </profile>
  </system.web>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-6.0.0.0" newVersion="6.0.0.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
</configuration>